import React, { useCallback, useEffect, useState } from 'react'
import { Link } from 'react-router-dom'
import Card from '../../components/Card.jsx'
import { useProductStore } from '../../store/Product.js'
import './Cakes.css'

const Cakes = () => {
	const { fetchProducts, fetchCategories, products, categories, loading } =
		useProductStore()
	const [selectedCategory, setSelectedCategory] = useState(null)
	const [searchTerm, setSearchTerm] = useState('')
	const [minPrice, setMinPrice] = useState('')
	const [maxPrice, setMaxPrice] = useState('')
	const [selectedIngredients, setSelectedIngredients] = useState('')
	const [minRate, setMinRate] = useState('')

	const applyFilters = useCallback(() => {
		const filters = {
			search: searchTerm,
			minPrice: minPrice,
			maxPrice: maxPrice,
			ingredients: selectedIngredients,
			minRating: minRate,
			category: selectedCategory?._id,
			isAvailable: true, // Always fetch available products
		}
		fetchProducts(filters)
	}, [
		searchTerm,
		minPrice,
		maxPrice,
		selectedIngredients,
		minRate,
		selectedCategory,
		fetchProducts,
	])

	useEffect(() => {
		fetchCategories()
		applyFilters() // Initial fetch on mount
	}, []) // Empty dependency array to run only once on mount

	const handleCategoryClick = category => {
		setSelectedCategory(category)
		applyFilters() // Apply filters immediately on category change
	}

	const handleAllProducts = () => {
		setSelectedCategory(null)
		applyFilters() // Apply filters immediately for all products
	}

	const handleIngredientChange = e => {
		setSelectedIngredients(e.target.value)
	}

	const resetAllFilters = () => {
		setSelectedCategory(null)
		setSearchTerm('')
		setMinPrice('')
		setMaxPrice('')
		setSelectedIngredients('')
		setMinRate('')
		// –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
		fetchProducts({ isAvailable: true })
	}

	const hasActiveFilters =
		searchTerm ||
		minPrice ||
		maxPrice ||
		selectedIngredients.length > 0 ||
		minRate ||
		selectedCategory

	return (
		<main>
			<div className='menu'>
				<h2>–§–∏–ª—å—Ç—Ä—ã</h2>
				<div className='filter-section'>
					<h3>–ü–æ–∏—Å–∫</h3>
					<input
						type='text'
						placeholder='–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é...'
						value={searchTerm}
						onChange={e => setSearchTerm(e.target.value)}
					/>
				</div>

				<div className='filter-section'>
					<h3>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h3>
					<div className='ingredients-filter'>
						<input
							type='text'
							placeholder='–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã...'
							value={selectedIngredients}
							onChange={handleIngredientChange}
						/>
					</div>
				</div>

				<div className='filter-section'>
					<h3>–¶–µ–Ω–∞</h3>
					<div className='price-filter'>
						<input
							type='number'
							placeholder='–û—Ç'
							value={minPrice}
							onChange={e => setMinPrice(e.target.value)}
						/>
						<input
							type='number'
							placeholder='–î–æ'
							value={maxPrice}
							onChange={e => setMaxPrice(e.target.value)}
						/>
					</div>
				</div>

				<div className='filter-section'>
					<h3>–†–µ–π—Ç–∏–Ω–≥ (–æ—Ç)</h3>
					<select value={minRate} onChange={e => setMinRate(e.target.value)}>
						<option value=''>–í—Å–µ</option>
						<option value='1'>1 –∑–≤–µ–∑–¥–∞ –∏ –≤—ã—à–µ</option>
						<option value='2'>2 –∑–≤–µ–∑–¥—ã –∏ –≤—ã—à–µ</option>
						<option value='3'>3 –∑–≤–µ–∑–¥—ã –∏ –≤—ã—à–µ</option>
						<option value='4'>4 –∑–≤–µ–∑–¥—ã –∏ –≤—ã—à–µ</option>
						<option value='5'>5 –∑–≤–µ–∑–¥</option>
					</select>
				</div>

				<div className='filter-section'>
					<h3>–ö–∞—Ç–µ–≥–æ—Ä–∏–∏</h3>
					<form className='menu_form'>
						<Link
							to={'#'}
							onClick={() => {
								handleAllProducts()
								applyFilters()
							}}
							className={!selectedCategory ? 'active' : ''}
						>
							–í—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã
						</Link>
						{categories && categories.length > 0 ? (
							categories.map(category => (
								<Link
									key={category._id}
									to={'#'}
									onClick={() => {
										handleCategoryClick(category)
										applyFilters()
									}}
									className={
										selectedCategory?._id === category?._id ? 'active' : ''
									}
								>
									{category.name}
								</Link>
							))
						) : (
							<p>–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...</p>
						)}
					</form>
				</div>
				<button className='apply-filters-btn' onClick={applyFilters}>
					–ü—Ä–∏–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
				</button>
			</div>
			<div className='catalogue'>
				<h2>Cakes</h2>
				<div className='catalogue_content'>
					{loading ? (
						<div className='loading-container'>
							<div className='loading-spinner'></div>
							<p className='loading-text'>–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã...</p>
						</div>
					) : products && products.length > 0 ? (
						products.map(product => (
							<Card key={product._id} product={product} />
						))
					) : (
						<div className='no-products-container'>
							<div className='no-products-icon'></div>
							<h3 className='no-products-message'>
								{hasActiveFilters
									? '–¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
									: '–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤'}
							</h3>
							<p className='no-products-description'>
								{hasActiveFilters
									? '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤.'
									: '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤. –ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –¥—Ä—É–≥–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.'}
							</p>
							<div className='no-products-actions'>
								{hasActiveFilters && (
									<button
										className='reset-filters-btn'
										onClick={resetAllFilters}
									>
										üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
									</button>
								)}
								<Link to='/' className='browse-all-btn'>
									üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é
								</Link>
							</div>
						</div>
					)}
				</div>
			</div>
		</main>
	)
}

export default Cakes
